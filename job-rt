#!/bin/bash -l
#SBATCH --constraint=cpu
#SBATCH --cpus-per-task=1
#SBATCH --qos=debug
#SBATCH --nodes=1
#SBATCH --time=00:30:00
#SBATCH --job-name=job-rt
#SBATCH --account=m3930
#SBATCH --perf=generic
#SBATCH --output=log/%j-job-rt.out
#SBATCH --error=log/%j-job-rt.out

export OMP_PLACES=threads
export OMP_PROC_BIND=spread
unset OMP_NUM_THREADS

export PERF_COUNTER_GROUP=FLOPS_DP
export MARKER_FLAG="-m"

for t in 256 128 64 32 16 8 4 2 1; do
	echo OMP_SCHEDULE=static OMP_NUM_THREADS=$t ./build/ray-tracing-omp -S 32 -W 512 -H 288 -D 32 -o images/static-image-$t.ppm
	OMP_SCHEDULE=static OMP_NUM_THREADS=$t ./build/ray-tracing-omp -S 32 -W 512 -H 288 -D 32 -o images/static-image-$t.ppm
done
for schedule in 'dynamic,1' 'dynamic,4' 'dynamic,16' 'dynamic,64'; do
	echo "Experiments with $schedule without collapse"
	for t in 256 128 64 32 16 8 4 2 1; do
		echo OMP_SCHEDULE=$schedule OMP_NUM_THREADS=$t ./build/ray-tracing-omp -S 32 -W 512 -H 288 -D 32 -o images/$schedule-image-$t.ppm
		OMP_SCHEDULE=$schedule OMP_NUM_THREADS=$t ./build/ray-tracing-omp -S 32 -W 512 -H 288 -D 32 -o images/$schedule-image-$t.ppm
	done

	echo "Experiments with $schedule with collapse"
	for t in 256 128 64 32 16 8 4 2 1; do
		echo OMP_SCHEDULE=$schedule OMP_NUM_THREADS=$t ./build/ray-tracing-omp_collapse -S 32 -W 512 -H 288 -D 32 -o images/$schedule-collapse-image-$t.ppm
		OMP_SCHEDULE=$schedule OMP_NUM_THREADS=$t ./build/ray-tracing-omp_collapse -S 32 -W 512 -H 288 -D 32 -o images/$schedule-collapse-image-$t.ppm
	done
done

